package de.rbsulm.rbs_lf12.controllers;

import de.rbsulm.rbs_lf12.model.CalendarEvent;
import de.rbsulm.rbs_lf12.mysql.CalendarEventRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import java.sql.Date;

@Controller // This means that this class is a Controller
@RequestMapping(path="/calendarEvent") // This means URL's start with /calendarEvent (after Application path)
public class CalendarEventController {
  @Autowired // This means to get the bean called userRepository
         // Which is auto-generated by Spring, we will use it to handle the data
  private CalendarEventRepository calendarEventRepository;

  @PostMapping(path="/add") // Map ONLY POST Requests
  public @ResponseBody String addNewCalendarEvent (@RequestParam String title
      , @RequestParam String description, @RequestParam String location, @RequestParam Date startDate, @RequestParam Date endDate) {
    // @ResponseBody means the returned String is the response, not a view name
    // @RequestParam means it is a parameter from the GET or POST request

    CalendarEvent n = new CalendarEvent();
    n.setTitle(title);
    n.setDescription(description);
    n.setLocation(location);
    n.setStartDate(startDate);
    n.setEndDate(endDate);
    calendarEventRepository.save(n);
    return "Saved";
  }

  @GetMapping(path="/all")
  public @ResponseBody Iterable<CalendarEvent> getAllCalendarEvents() {
    // This returns a JSON or XML with the users
    return calendarEventRepository.findAll();
  }
}
